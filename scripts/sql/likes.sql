CREATE TABLE IF NOT EXISTS likes (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES users(id),
  post_id INTEGER REFERENCES posts(id),
  comment_id INTEGER REFERENCES comments(id),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT not_both_null CHECK (
    (post_id IS NULL AND comment_id IS NOT NULL) OR (post_id IS NOT NULL AND comment_id IS NULL)
  )
);

INSERT INTO likes (user_id, post_id, comment_id) 
VALUES
  (1, 2, null),
  (2, 3, null),
  (3, null, 4),
  (4, 5, null),
  (5, 6, null),
  (6, null, 12),
  (7, 8, null),
  (8, null, 9),
  (9, 10, null),
  (10, 1, null),
  (1, 20, null),
  (2, null, 3),
  (3, 4, null),
  (4, null, 5),
  (5, 6, null),
  (6, null, 7),
  (7, 8, null),
  (8, 9, null),
  (9, null, 10),
  (10, 1, null),
  (1, null, 2),
  (2, null, 20),
  (3, null, 4),
  (4, 5, null),
  (5, 6, null),
  (6, null, 7),
  (7, 8, null),
  (8, 9, null),
  (9, 10, null),
  (10, null, 1),
  (1, 2, null),
  (2, null, 3),
  (3, 4, null),
  (4, null, 5),
  (5, 6, null),
  (6, 7, null),
  (7, null, 8),
  (8, 9, null),
  (9, 10, null),
  (10, 12, null),
  (1, 2, null),
  (2, null, 11),
  (3, 4, null),
  (4, null, 5),
  (5, 17, null),
  (6, null, 7),
  (7, 18, null),
  (8, 9, null),
  (9, null, 10),
  (10, 1, null);